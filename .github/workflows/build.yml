name: Build Pipeline Parser
on: [push, pull_request, workflow_dispatch]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Execute Tests
        run: |
          go test -v ./...
        env:
          GOPRIVATE: github.com/argonsecurity/*

  build:
    if: ${{ ( github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '#build') || (github.ref  == 'refs/heads/main') || (github.ref  == 'refs/heads/master')) && !contains(github.event.head_commit.message, '#skip-build') }}
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.9
        with:
          versionSpec: "5.8.3"

      - name: Bump Version
        if: "${{ github.ref  != 'refs/heads/main'}}"
        run: |
          echo "Increasing version"
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.9

      - name: Set Version
        run: |
          if [[ "${{ github.event.inputs.increaseVersion}}" != "yes" || ! ${{ github.ref }} =~ refs/heads/(main|master)$ ]]; then
            echo "Set GITVERSION by steps.gitversion.outputs.fullSemVer"
            GITVERSION=${{ steps.gitversion.outputs.fullSemVer }}
          else
            echo "Set GITVERSION by Incrementing steps.gitversion.outputs.fullSemVer"
            GITVERSION=${GitVersion_Major}.${GitVersion_Minor}.$((GitVersion_Patch+1))
          fi
          echo "gitversion=${GITVERSION}" | tee -a $GITHUB_ENV

      - name: Commit Tag Build
        env:
          TAG: ${{ env.gitversion }}
          DOCKER_REPO: ${{ env.docker_repo_name }}
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git tag "v${TAG}" || true
          git push --tags  || true
